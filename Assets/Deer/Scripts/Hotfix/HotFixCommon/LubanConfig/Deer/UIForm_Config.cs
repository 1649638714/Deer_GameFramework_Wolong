//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace cfg.Deer
{

public sealed partial class UIForm_Config :  Bright.Config.BeanBase 
{
    public UIForm_Config(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        AssetName = _buf.ReadString();
        UiGroupName = _buf.ReadString();
        AllowMultiInstance = _buf.ReadBool();
        PauseCoveredUIForm = _buf.ReadBool();
        PostInit();
    }

    public static UIForm_Config DeserializeUIForm_Config(ByteBuf _buf)
    {
        return new Deer.UIForm_Config(_buf);
    }

    /// <summary>
    /// 唯一标识
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 资源名字
    /// </summary>
    public string AssetName { get; private set; }
    /// <summary>
    /// 界面组名字
    /// </summary>
    public string UiGroupName { get; private set; }
    /// <summary>
    /// 是否允许多个界面实例
    /// </summary>
    public bool AllowMultiInstance { get; private set; }
    /// <summary>
    /// 是否暂停被其覆盖的界面
    /// </summary>
    public bool PauseCoveredUIForm { get; private set; }

    public const int __ID__ = 47771433;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "AssetName:" + AssetName + ","
        + "UiGroupName:" + UiGroupName + ","
        + "AllowMultiInstance:" + AllowMultiInstance + ","
        + "PauseCoveredUIForm:" + PauseCoveredUIForm + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
